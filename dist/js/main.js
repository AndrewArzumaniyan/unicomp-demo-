/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/main.js":
/*!************************!*\
  !*** ./src/js/main.js ***!
  \************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

  eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_marketfs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/marketfs.js */ \"./src/js/modules/marketfs.js\");\n\r\n\r\n_modules_marketfs_js__WEBPACK_IMPORTED_MODULE_0__.market()\n\n//# sourceURL=webpack://gulp/./src/js/main.js?");

  /***/ }),
  
  /***/ "./src/js/modules/functions.js":
  /*!*************************************!*\
    !*** ./src/js/modules/functions.js ***!
    \*************************************/
  /***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
  
  eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getCategories\": () => (/* binding */ getCategories),\n/* harmony export */   \"getSpecializations\": () => (/* binding */ getSpecializations),\n/* harmony export */   \"getUniversities\": () => (/* binding */ getUniversities),\n/* harmony export */   \"removeModal\": () => (/* binding */ removeModal),\n/* harmony export */   \"specializations\": () => (/* binding */ specializations),\n/* harmony export */   \"universities\": () => (/* binding */ universities),\n/* harmony export */   \"openModal\": () => (/* binding */ openModal),\n/* harmony export */   \"closeModal\": () => (/* binding */ closeModal),\n/* harmony export */   \"addUniCards\": () => (/* binding */ addUniCards)\n/* harmony export */ });\nasync function getSpecializations() {\r\n  const response = await fetch('http://109.248.170.251:80/api/specializations');\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nasync function getCategories() {\r\n  const response = await fetch('http://109.248.170.251:80/api/categories');\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nasync function getUniversities() {\r\n  const response = await fetch('http://109.248.170.251:80/api/universities');\r\n  const data = await response.json()\r\n  return data\r\n}\r\n\r\nfunction createCheckboxItem({name, _id, checked}) {\r\n  const list_item = document.createElement('li')\r\n  const label = document.createElement('label')\r\n  const input = document.createElement('input')\r\n  const icon = document.createElement('span')\r\n  const text = document.createElement('span')\r\n\r\n  text.classList.add('checkbox__label-text')\r\n  text.textContent = name\r\n\r\n  icon.classList.add('checkbox__label-icon')\r\n\r\n  input.classList.add('checkbox__label-input')\r\n  input.setAttribute('type', 'checkbox')\r\n  input.id = `${_id}`\r\n  if (checked) {\r\n    input.checked = true\r\n  }\r\n\r\n  label.setAttribute('for', `${_id}`)\r\n  label.classList.add('checkbox__label')\r\n  label.append(input)\r\n  label.append(icon)\r\n  label.append(text)\r\n\r\n  list_item.classList.add('checkbox__item')\r\n  list_item.append(label)\r\n\r\n  return list_item\r\n}\r\n\r\nfunction createCategoryItem({name, id}) {\r\n  const el = document.createElement('div')\r\n  el.classList.add('category__slider-slide')\r\n  el.classList.add('swiper-slide')\r\n  el.textContent = name\r\n  el.id = `${id}`\r\n  return el\r\n}\r\n\r\nfunction createEmptyCard() {\r\n  const card = document.createElement('div')\r\n  const icon = document.createElement('div')\r\n  const text = document.createElement('div')\r\n  const par1 = document.createElement('p')\r\n  const par2 = document.createElement('p')\r\n\r\n  par1.classList.add('unicard__text-el')\r\n  par1.textContent = 'Добавить'\r\n  \r\n  par2.classList.add('unicard__text-el')\r\n  par2.textContent = 'университет'\r\n\r\n  text.classList.add('unicard__text')\r\n  text.append(par1)\r\n  text.append(par2)\r\n\r\n  icon.classList.add('unicard__icon')\r\n\r\n  card.classList.add('unicard__card')\r\n  card.append(icon)\r\n  card.append(text)\r\n  return card\r\n}\r\n\r\nfunction createUniCard({name, img = ''}) {\r\n  const card = document.createElement('div')\r\n  const bg = document.createElement('div')\r\n  const text = document.createElement('p')\r\n\r\n  text.classList.add('unicard__card-name')\r\n  bg.classList.add('unicard__card-bg')\r\n  card.classList.add('unicard__card')\r\n\r\n  text.textContent = name\r\n  if (img) \r\n    bg.style.backgroundImage = `url(\"/${img.trim()}\")`\r\n\r\n  card.append(bg)\r\n  card.append(text)\r\n  return card\r\n}\r\n\r\nfunction addUniCards(compareUnivers = [], list) {\r\n  compareUnivers.forEach((univer) => {\r\n    list.append(createUniCard(univer))\r\n  })\r\n  for (let i = 0; i < 3 - compareUnivers.length; i++) {\r\n    list.append(createEmptyCard())\r\n  }\r\n}\r\n\r\nfunction removeUniCards(list) {\r\n  const cards = list.querySelectorAll('.unicard__card')\r\n  cards.forEach((card) => {\r\n    card.remove()\r\n  })\r\n}\r\n\r\nfunction addChecksList(specializations, lists) {\r\n  if (specializations) {\r\n    for(let i = 0; i < specializations.length; i++) {\r\n      if (!(i % 2)) {\r\n        lists[0].append(createCheckboxItem(specializations[i]))\r\n      } else {\r\n        lists[1].append(createCheckboxItem(specializations[i]))\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkModalNums(inputs, num, checkeds, universities) {\r\n\r\n  inputs.forEach((input) => {\r\n    input.addEventListener('change', () => {\r\n      if (input.checked) {\r\n        if (checkeds.length >= num - 1) {\r\n          checkeds[0].checked = false\r\n          for(let tmp of inputs) {\r\n            if (tmp.id === checkeds[0].id) {\r\n              tmp.checked = false\r\n            }\r\n          }\r\n          for (let el of universities) {\r\n            if (checkeds[0].id == el._id) {\r\n              el.checked = false\r\n            } \r\n          }\r\n          checkeds.splice(0, 1)   \r\n        }\r\n        checkeds.push(input)\r\n        for (let el of universities) {\r\n          if (input.id == el._id) {\r\n            el.checked = true\r\n          } \r\n        }\r\n      } else {\r\n        let i = 0\r\n        for (; i < checkeds.length; i++) {\r\n          if (input.id == checkeds[i].id) break\r\n        }\r\n        for (let el of universities) {\r\n          if (input.id == el._id) {\r\n            el.checked = false\r\n          } \r\n        }\r\n        checkeds.splice(i,1)\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\nfunction openModal(btns, modal) {\r\n  btns.forEach((btn) => {\r\n    btn.addEventListener('click', (e) => {\r\n      e.preventDefault()\r\n      modal.classList.add('active')\r\n      document.body.classList.add('hidden')\r\n    });\r\n  });\r\n}\r\n\r\nfunction closeModal(btn, modal) {\r\n  btn.addEventListener('click', (e) => {\r\n    e.preventDefault()\r\n    removeModal(modal)\r\n  })\r\n}\r\n\r\nfunction removeModal(modal) {\r\n  modal.classList.remove('active')\r\n  document.body.classList.remove('hidden')\r\n}\r\n\r\nfunction modalWork(open, close, modal) {\r\n  openModal(open, modal)\r\n  closeModal(close, modal)\r\n}\r\n\r\nfunction delSpec(box) {\r\n  const els = box.querySelectorAll('.checkbox__item')\r\n  els.forEach(el => {\r\n    el.remove()\r\n  })\r\n}\r\n\r\nfunction checkChecked(inputs, arr) {\r\n  inputs.forEach((input) => {\r\n    input.addEventListener('change', () => {\r\n      if (input.checked) {\r\n        for (let el of arr) {\r\n          if (input.id == el._id) {\r\n            el.checked = true\r\n          } \r\n        }\r\n      } else {\r\n        for (let el of arr) {\r\n          if (input.id == el._id) {\r\n            el.checked = false\r\n          } \r\n        }\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\nfunction search(arr, input, lists = [], mod = 'spec', checkeds = []) {\r\n  let newArr = [...arr]\r\n  input.addEventListener('input', () => {\r\n    if (input.value == '') {\r\n      newArr = [...arr]\r\n    } else {\r\n      newArr = arr.filter(el => el.name.trim().toLowerCase().includes(input.value.trim().toLowerCase()))\r\n    }\r\n    if (lists) {\r\n      lists.forEach((list) => {\r\n        delSpec(list)\r\n      })\r\n    }\r\n    \r\n    addChecksList(newArr, lists)\r\n    let inputs\r\n    if (mod === 'spec') {\r\n      inputs = document.querySelectorAll('.specialization .checkbox__label-input')\r\n      checkChecked(inputs, newArr)\r\n    } else if (mod == 'uni'){\r\n      inputs = document.querySelectorAll('.uni-modal .checkbox__label-input')\r\n      checkModalNums(inputs, 4, checkeds, arr)\r\n    }\r\n  })\r\n}\r\n\r\nasync function specializations() {\r\n  const specializations = await getSpecializations()\r\n  \r\n  const specBtn = document.querySelector('.specialization__btn')\r\n  const listBox = document.querySelector('.specialization__list-box')\r\n  const lists = listBox.querySelectorAll('ul')\r\n  const inputArea = document.querySelector('.specialization__search-input')\r\n\r\n  \r\n  addChecksList(specializations, lists)\r\n  const inputs = document.querySelectorAll('.specialization .checkbox__label-input')\r\n\r\n  checkChecked(inputs, specializations)\r\n  search(specializations, inputArea, lists)\r\n  \r\n  \r\n  \r\n\r\n  specBtn.addEventListener('click', (e) => {\r\n    e.preventDefault()\r\n    specBtn.classList.add('disabled')\r\n    listBox.classList.add('active')\r\n  })\r\n\r\n}\r\n\r\nfunction createThead(univers, height) {\r\n  const thead = document.createElement('thead')\r\n  const tr = document.createElement('tr')\r\n  const th1 = document.createElement('th')\r\n  th1.textContent = 'Категории'\r\n  tr.append(th1)\r\n  for (let i = 0; i < univers.length; i++) {\r\n    const th = document.createElement('th')\r\n    const bg = document.createElement('div')\r\n    const text = document.createElement('span')\r\n\r\n    text.classList.add('table__head-text')\r\n    text.textContent = univers[i].name.trim()\r\n\r\n    bg.classList.add('table__bg')\r\n    bg.style.height = `${height}px`\r\n    if (univers[i].img)\r\n      bg.style.backgroundImage = `url(/${univers[i].img.trim()})`\r\n\r\n    th.append(bg)\r\n    th.append(text)\r\n\r\n    tr.append(th)\r\n  }\r\n  for(let i = 0; i < 3 - univers.length; i++) {\r\n    const th = document.createElement('th')\r\n    th.textContent = '-'\r\n\r\n    tr.append(th)\r\n  }\r\n\r\n  thead.append(tr)\r\n  return thead\r\n}\r\n\r\nfunction createTbodyTr(categories, univers, key) {\r\n  const tr = document.createElement('tr')\r\n  const td1 = document.createElement('td')\r\n  td1.textContent = categories[key].charAt(0).toUpperCase() + categories[key].slice(1)\r\n  tr.append(td1)\r\n  for (let i = 0; i < univers.length; i++) {\r\n    const td = document.createElement('td')\r\n    if (univers[i][key]) {\r\n      td.textContent = univers[i][key]\r\n    } else {\r\n      td.textContent = '-'\r\n    }\r\n    tr.append(td)\r\n  }\r\n  for (let i = 0; i < 3 - univers.length; i++) {\r\n    const td = document.createElement('td')\r\n    td.textContent = '-'\r\n\r\n    tr.append(td)\r\n  }\r\n\r\n  return tr\r\n}\r\n\r\nfunction createTbody(categories, univers) {\r\n  const tbody = document.createElement('tbody')\r\n  const keys = Object.keys(categories)\r\n  \r\n  for (let key of keys) {\r\n    const tr = createTbodyTr(categories, univers, key)\r\n    tbody.append(tr)\r\n  }\r\n  return tbody\r\n}\r\n\r\nfunction createTable(categories, compareUnivers) {\r\n  const section = document.createElement('section')\r\n  section.classList.add('table')\r\n  const container = document.createElement('div')\r\n  container.classList.add('container')\r\n  container.classList.add('table__container')\r\n  const table = document.createElement('table')\r\n  const thead = createThead(compareUnivers, Object.keys(categories).length * 100 + 80)\r\n  const tbody = createTbody(categories, compareUnivers)\r\n  \r\n  table.append(thead)\r\n  table.append(tbody)\r\n  container.append(table)\r\n  section.append(container)\r\n\r\n  return section\r\n}\r\n\r\nasync function universities() {\r\n  const universities = await getUniversities()\r\n\r\n  //* Modals\r\n  let btnOpen = document.querySelectorAll('.unicard__card')\r\n  const btnClose = document.querySelector('.uni-modal__close')\r\n  const modal = document.querySelector('.uni-modal')\r\n  \r\n  modalWork(btnOpen, btnClose, modal)\r\n  //*\r\n\r\n\r\n  //*createList\r\n  const listBox = document.querySelector('.uni-modal__list-box')\r\n  const lists = listBox.querySelectorAll('ul')\r\n  const inputArea = document.querySelector('.uni-modal__search-input')\r\n  addChecksList(universities, lists)\r\n\r\n  //*\r\n  \r\n  \r\n  //*only 3 checked\r\n  const inputs = document.querySelectorAll('.uni-modal .checkbox__label-input')\r\n  let checkeds = []\r\n  checkModalNums(inputs, 4, checkeds, universities)\r\n  search(universities, inputArea, lists, 'uni', checkeds)  \r\n  //*\r\n  \r\n  \r\n  //*choose univers\r\n  const uniModalBtn = document.querySelector('.uni-modal__btn')\r\n  let compareUnivers = []\r\n  \r\n  uniModalBtn.addEventListener('click', (e) => {\r\n    compareUnivers = []\r\n    e.preventDefault()\r\n\r\n    //*filter univers\r\n    checkeds.forEach((checked) => {\r\n      let tmp = universities.filter(university => university._id === checked.id)\r\n      compareUnivers.push(...tmp)\r\n    })\r\n    //*\r\n\r\n    \r\n    const unicardBox = document.querySelector('.unicard__box')\r\n    removeUniCards(unicardBox)\r\n    removeModal(modal)\r\n    addUniCards(compareUnivers, unicardBox)\r\n\r\n    btnOpen = document.querySelectorAll('.unicard__card')\r\n    modalWork(btnOpen, btnClose, modal)\r\n  })\r\n  //*\r\n\r\n  //*categories\r\n  const categoriesBtn = document.querySelectorAll('.category__slider-slide')\r\n  let categories = {}\r\n\r\n  categoriesBtn.forEach((btn) => {\r\n    btn.addEventListener('click', () => {\r\n      categories = {}\r\n      btn.classList.toggle('checked')\r\n      let tmp = document.querySelectorAll('.category__slider-slide.checked')\r\n\r\n      for (let i = 0; i < tmp.length; i++) {\r\n        categories[tmp[i].id] = tmp[i].innerHTML.trim()\r\n      }\r\n    })\r\n  })\r\n  //*\r\n\r\n  //*compare\r\n  const compareBtn = document.querySelector('.unicard__btn')\r\n\r\n  compareBtn.addEventListener('click', (e) => {\r\n    e.preventDefault()\r\n    const par = document.querySelector('.compare-error-text');\r\n    par.style.marginTop = \"0\"\r\n    par.textContent = ''\r\n    const tableAddContainer = document.querySelector('.main')\r\n    if (tableAddContainer.lastChild.classList == 'table') {\r\n      document.querySelector('.table').remove()\r\n    }\r\n\r\n    if (Object.keys(categories).length > 0 && compareUnivers.length > 0) {\r\n      const sectionTable = createTable(categories, compareUnivers)\r\n  \r\n      tableAddContainer.append(sectionTable)\r\n    } else {\r\n      par.textContent = 'Для сравнения необходимо выбрать минимум 1 университет и 1 категорию'\r\n      par.style.marginTop = \"10px\"\r\n    }\r\n  })\r\n  //*\r\n}\r\n\r\n\n\n//# sourceURL=webpack://gulp/./src/js/modules/functions.js?");
  
  /***/ }),
  
  /***/ "./src/js/modules/marketfs.js":
  /*!************************************!*\
    !*** ./src/js/modules/marketfs.js ***!
    \************************************/
  /***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {
  
  eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"market\": () => (/* binding */ market)\n/* harmony export */ });\n/* harmony import */ var _functions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./functions.js */ \"./src/js/modules/functions.js\");\n\r\n\r\nfunction createCard({ _id, img, name, city }) {\r\n  const card = document.createElement('div')\r\n  const cardBg = document.createElement('div')\r\n  const cardImg = document.createElement('img')\r\n  const cardInfo = document.createElement('div')\r\n  const cardTitle = document.createElement('h3')\r\n  const cardCity = document.createElement('h4')\r\n  const cardClicked = document.createElement('span')\r\n\r\n  cardClicked.classList.add('card__clicked')\r\n  cardCity.classList.add('card__subtitle')\r\n  cardCity.textContent = city.trim()\r\n  cardTitle.classList.add('card__title')\r\n  cardTitle.textContent = name.trim()\r\n  cardInfo.classList.add('card__info')\r\n  cardInfo.append(cardTitle)\r\n  cardInfo.append(cardCity)\r\n  if (img) {\r\n    cardImg.src = `/${img.trim()}`\r\n  }\r\n  cardBg.classList.add('card__bg')\r\n  cardBg.append(cardImg)\r\n\r\n  card.classList.add('market__card')\r\n  card.classList.add('card')\r\n  card.id = _id\r\n  card.append(cardBg)\r\n  card.append(cardInfo)\r\n  card.append(cardClicked)\r\n  return card\r\n}\r\n\r\nfunction addCards(cardBox, universities) {\r\n  universities.forEach((univer) => {\r\n    cardBox.append(createCard(univer))\r\n  })\r\n}\r\n\r\nfunction search(arr, input, cardBox, modal) {\r\n  let newArr = [...arr]\r\n  input.addEventListener('input', () => {\r\n    if (input.value == '') {\r\n      newArr = [...arr]\r\n    } else {\r\n      newArr = arr.filter(el => el.name.trim().toLowerCase().includes(input.value.trim().toLowerCase()))\r\n    }\r\n    if (cardBox) {\r\n      cardBox.querySelectorAll('.card').forEach((el) => {\r\n        el.remove()\r\n      })\r\n    }\r\n    addCards(cardBox, newArr)\r\n    const cards = document.querySelectorAll('.market .card')\r\n    openModalMarket(cards, modal, arr)\r\n    closeModalOnBody(modal)\r\n  })\r\n}\r\n\r\nfunction openModalMarket(btns, modal, universities) {\r\n  btns.forEach((btn) => {\r\n    btn.addEventListener('click', (e) => {\r\n      e.preventDefault()\r\n      modal.classList.add('active')\r\n      document.body.classList.add('hidden')\r\n\r\n      if (modal.querySelector('.market-modal__wrapper')) {\r\n        modal.querySelector('.market-modal__wrapper').remove()\r\n      }\r\n      for (let univer of universities) {\r\n        if (univer._id == btn.id) {\r\n          let wrapper = createModalWrapper(univer)\r\n          modal.append(wrapper)\r\n        }\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nfunction closeModalOnBody(modal) {\r\n  modal.addEventListener('click', (el) => {\r\n    if (el.target == modal){\r\n      _functions_js__WEBPACK_IMPORTED_MODULE_0__.removeModal(modal)\r\n    }\r\n  })\r\n}\r\n\r\nfunction createModalWrapper({name, img, city, address}) {\r\n  const wrapper = document.createElement('div')\r\n  const bg = document.createElement('div')\r\n  const info = document.createElement('div')\r\n  const title = document.createElement('h2')\r\n  const descr = document.createElement('div')\r\n  const modalAddress = document.createElement('h4')\r\n  const p = document.createElement('p')\r\n\r\n  p.textContent =  'Скоро тут появится актуальная информация. Ожидайте)'\r\n  modalAddress.classList.add('market-modal__address')\r\n  modalAddress.textContent = `${city}, ${address}`\r\n  descr.classList.add('market-modal__descr')\r\n  descr.append(modalAddress)\r\n  descr.append(p)\r\n\r\n  title.classList.add('market-modal__title')\r\n  title.textContent = name\r\n  info.classList.add('market-modal__info')\r\n  info.append(title)  \r\n  info.append(descr)\r\n  \r\n  bg.classList.add('market-modal__bg')\r\n  if (img)\r\n    bg.style.backgroundImage = `url(\"/${img}\")`\r\n  else\r\n    bg.textContent = 'Скоро тут появится фото университета)'\r\n\r\n  wrapper.classList.add('market-modal__wrapper')\r\n  wrapper.append(bg)\r\n  wrapper.append(info)\r\n\r\n  return wrapper\r\n}\r\n\r\nasync function market() {\r\n  const universities = await _functions_js__WEBPACK_IMPORTED_MODULE_0__.getUniversities()\r\n  const cardBox = document.querySelector('.market__cards-box')\r\n  const searchInput = document.querySelector('.market__search-input')\r\n\r\n  addCards(cardBox, universities)\r\n\r\n  \r\n  const cards = document.querySelectorAll('.market .card')\r\n  const modal = document.querySelector('.market-modal')\r\n  \r\n  search(universities, searchInput, cardBox, modal)\r\n  openModalMarket(cards, modal, universities)\r\n  closeModalOnBody(modal)\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://gulp/./src/js/modules/marketfs.js?");
  
  /***/ })
  
  /******/ 	});
  /************************************************************************/
  /******/ 	// The module cache
  /******/ 	var __webpack_module_cache__ = {};
  /******/ 	
  /******/ 	// The require function
  /******/ 	function __webpack_require__(moduleId) {
  /******/ 		// Check if module is in cache
  /******/ 		var cachedModule = __webpack_module_cache__[moduleId];
  /******/ 		if (cachedModule !== undefined) {
  /******/ 			return cachedModule.exports;
  /******/ 		}
  /******/ 		// Create a new module (and put it into the cache)
  /******/ 		var module = __webpack_module_cache__[moduleId] = {
  /******/ 			// no module.id needed
  /******/ 			// no module.loaded needed
  /******/ 			exports: {}
  /******/ 		};
  /******/ 	
  /******/ 		// Execute the module function
  /******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
  /******/ 	
  /******/ 		// Return the exports of the module
  /******/ 		return module.exports;
  /******/ 	}
  /******/ 	
  /************************************************************************/
  /******/ 	/* webpack/runtime/define property getters */
  /******/ 	(() => {
  /******/ 		// define getter functions for harmony exports
  /******/ 		__webpack_require__.d = (exports, definition) => {
  /******/ 			for(var key in definition) {
  /******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
  /******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
  /******/ 				}
  /******/ 			}
  /******/ 		};
  /******/ 	})();
  /******/ 	
  /******/ 	/* webpack/runtime/hasOwnProperty shorthand */
  /******/ 	(() => {
  /******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
  /******/ 	})();
  /******/ 	
  /******/ 	/* webpack/runtime/make namespace object */
  /******/ 	(() => {
  /******/ 		// define __esModule on exports
  /******/ 		__webpack_require__.r = (exports) => {
  /******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
  /******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
  /******/ 			}
  /******/ 			Object.defineProperty(exports, '__esModule', { value: true });
  /******/ 		};
  /******/ 	})();
  /******/ 	
  /************************************************************************/
  /******/ 	
  /******/ 	// startup
  /******/ 	// Load entry module and return exports
  /******/ 	// This entry module can't be inlined because the eval devtool is used.
  /******/ 	var __webpack_exports__ = __webpack_require__("./src/js/main.js");
  /******/ 	
  /******/ })()
  ;